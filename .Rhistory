summary(aov_catMonth1,type='II')
#Type III Sum of Square
summary(aov_catMonth1,type='III')
View(table)
View(table)
aov.catMonth2<-aov_car(Total~Month*Cat+Error(Subj),data=table)
library(afex)
aov.catMonth2<-aov_car(Total ~ Month*Cat+Error(Subj),data=table)
library(afex)
aov.catMonth2<-aov_car(Total ~ Month*Cat + Error(Subj), data=summary_catMonth)
library(afex)
aov.catMonth2<-aov_car(Total ~ Month*Cat + Error(Subj), data=table)
alias( lm( Total ~ Month + Cat ) )
library(afex)
aov.catMonth2<-aov_car(Total ~ Month*Cat + Error(Subj), data=table, anova_table=list(es='pes'))
library(afex)
aov.catMonth2<-aov_car(Total ~ Month*Cat + Error(Subj), data=table, anova_table=list(es='pes'), type='II')
summary(aov.catMonth2)
FittedMeans.Month<-lsmeans(aov.catMonth2, ~Month)
FittedMeans.Month<-lsmeans(aov.catMonth2, ~Month)
FittedMeans.Month
pairs(FittedMeans.Month)
knitr(pairs(FittedMeans.Month))
kable(pairs(FittedMeans.Month))
pairs(FittedMeans.Month,adjust='Tukey')
kable(head(pairs(FittedMeans.Month,adjust='Tukey')))
kable(pairs(FittedMeans.Month,adjust='Tukey'))
kable(pairs(FittedMeans.Month,adjust='bon'))
table<-with(data, aggregate(x=list(Total=Total),
by=list(Cat=Cat,Month=Month,Time2=Time2,DayofWeek=DayofWeek, Subj=UniqueSubjNum),
FUN=mean))
table<-table[table$Month!=='05_May']
table<-with(data, aggregate(x=list(Total=Total),
by=list(Cat=Cat,Month=Month,Time2=Time2,DayofWeek=DayofWeek, Subj=UniqueSubjNum),
FUN=mean))
table<-table[table$Month!='05_May']
table<-with(data, aggregate(x=list(Total=Total),
by=list(Cat=Cat,Month=Month,Time2=Time2,DayofWeek=DayofWeek, Subj=UniqueSubjNum),
FUN=mean))
table<-table[!(table$Month=='05_May'),]
kable(head(table))
aov_catMonth1<-aov(data=table, Total ~ Month*Cat + Error(Subj))
summary(aov_catMonth1)
#Type III Sum of Square
summary(aov_catMonth1,type='III')
library(afex)
aov.catMonth2<-aov_car(Total ~ Month*Cat + Error(Subj), data=table, anova_table=list(es='pes'), type='II')
summary(aov.catMonth2)
aov_catMonth1<-aov(data=table, Total ~ Month*Cat + Error(Subj))
kable(summary(aov_catMonth1))
aov_catMonth1<-aov(data=table, Total ~ Month*Cat + Error(Subj))
summary(aov_catMonth1)
#Type III Sum of Square
kable(summary(aov_catMonth1,type='III'))
#Type III Sum of Square
summary(aov_catMonth1,type='III')
library(afex)
aov.catMonth2<-aov_car(Total ~ Month*Cat + Error(Subj), data=table, anova_table=list(es='pes'), type='II')
summary(aov.catMonth2)
aov_catTime1<-aov(data=table, Total ~ Time*Cat + Error(Subj))
aov_catTime1<-aov(data=table, Total ~ TimeofWeek*Cat + Error(Subj))
aov_catTime1<-aov(data=table, Total ~ Time2*Cat + Error(Subj))
summary(aov_catTime1)
FittedMeans.Month<-lsmeans(aov.catMonth2, ~Month)
kable(pairs(FittedMeans.Month,adjust='Tukey'))
FittedMeans.Month<-lsmeans(aov.catMonth2, ~Month)
Tukey_Month<-pairs(FittedMeans.Month,adjust='Tukey')
Tukey_Month<-Tukey_Month[order(p.value),]
FittedMeans.Month<-lsmeans(aov.catMonth2, ~Month)
Tukey_Month<-pairs(FittedMeans.Month,adjust='Tukey')
Tukey_Month
FittedMeans.Month<-lsmeans(aov.catMonth2, ~Month)
Tukey_Month<-data.frame(pairs(FittedMeans.Month,adjust='Tukey'))
Tukey_Month
FittedMeans.Month<-lsmeans(aov.catMonth2, ~Month)
Tukey_Month<-data.frame(pairs(FittedMeans.Month,adjust='Tukey'))
Tukey_Month<-Tukey_Month[order(p.value),]
FittedMeans.Month<-lsmeans(aov.catMonth2, ~Month)
Tukey_Month<-data.frame(pairs(FittedMeans.Month,adjust='Tukey'))
Tukey_Month[order(Tukey_Month$p.value),]
FittedMeans.Month<-lsmeans(aov.catMonth2, ~Month)
Tukey_Month<-data.frame(pairs(FittedMeans.Month,adjust='Tukey'))
kable(Tukey_Month[order(Tukey_Month$p.value),])
kable(pairs(FittedMeans.Month,adjust='Tukey'))
FittedMeans.Time<-lsmeans(aov_catTime1, ~Time2)
Tukey_Time<-data.frame(pairs(FittedMeans.Time,adjust='Tukey'))
#sort by p.value
kable(Tukey_Time[order(Tukey_Time$p.value),])
Tukey_Month<-data.frame(pairs(FittedMeans.Month,adjust='Tukey'))
kable(Tukey_Month<-Tukey_Month[order(Tukey_Month$p.value),])
FittedMeans.Time<-lsmeans(aov_catTime1, ~Time2)
kable(pairs(FittedMeans.Time,adjust='Tukey'))
library(afex)
aov.catTime2<-aov_car(Total ~ Time2*Cat + Error(Subj), data=table, anova_table=list(es='pes'), type='II')
summary(aov.catTime2)
library(afex)
aov.catTime2<-aov_car(Total ~ Time2*Cat + Error(Subj), data=table, anova_table=list(es='pes'), type='II')
kable(summary(aov.catTime2))
aov_catTime1<-aov(data=table, Total ~ Time2*Cat + Error(Subj))
kable(summary(aov_catTime1))
aov_catTime1<-aov(data=table, Total ~ Time2*Cat + Error(Subj))
summary(aov_catTime1)
library(afex)
aov.catMonth2<-aov_car(Total ~ Month*Cat + Error(Subj), data=table, anova_table=list(es='pes'), type='II')
kable(summary(aov.catMonth2))
bon_Month<-data.frame(pairs(FittedMeans.Month,adjust='bon'))
bon_Month<-bon_Month[order(bon_Month$p.value),]
kable(bon_Month)
#view(dfSummary(dm))
view(dfSummary(dm))
# install.packages('ggplot2')
# install.packages('readxl') #for reading
# install.packages('ez') #for ANOVA
# install.packages('apaTables') #for formatting anova in APA format
# install.packages('RColorBrewer') #for acccesable plots
# install.packages('schoRsch') #for formatting anova in APA format
#install.packages('Rmisc') #quick and easy summarizing
#install.packages('summarytools')
library(ggplot2)
library(readxl)
library(ez)
library(apaTables)
view(dfSummary(dm))
ModifiedFullData <- read_excel("ModifiedFullData.xlsx")
library(rmarkdown)
# install.packages('ggplot2')
# install.packages('readxl') #for reading
# install.packages('ez') #for ANOVA
# install.packages('apaTables') #for formatting anova in APA format
# install.packages('RColorBrewer') #for acccesable plots
# install.packages('schoRsch') #for formatting anova in APA format
#install.packages('Rmisc') #quick and easy summarizing
#install.packages('summarytools')
library(ggplot2)
library(readxl)
library(ez)
library(apaTables)
ModifiedFullData <- read_excel("ModifiedFullData.xlsx")
#we drop the may data, becasue there are not many people, no one learned the
#RD set, and it's a different sample, recruited in a different way.
#the full data that will be reported in the paper will not include these data
dm<-subset(ModifiedFullData,Month!="05_May")
view(dfSummary(dm))
View(dfSummary(dm))
summary_catMonth<-summarySE(table, measurevar='Total',groupvars=c('Cat','Month'))
library(tidyverse)
library(readxl)
library(ggplot2)
library(Rmisc)
library(knitr)
data<-read_excel('ModifiedFullData.xlsx')
table<-with(data, aggregate(x=list(Total=Total),
by=list(Cat=Cat,Month=Month,Time2=Time2,DayofWeek=DayofWeek, Subj=UniqueSubjNum),
FUN=mean))
table<-table[!(table$Month=='05_May'),]
kable(head(table))
summary_catMonth<-summarySE(table, measurevar='Total',groupvars=c('Cat','Month'))
kable(summary_catMonth, digits=3)
table<-with(data, aggregate(x=list(Total=Total),
by=list(Cat=Cat,Month=Month,Time2=Time2,DayofWeek=DayofWeek, Subj=UniqueSubjNum),
FUN=mean))
table<-table[!(table$Month=='05_May'),]
kable(head(table), digits=3)
$$\eta^2_{partial} = {\frac{df_n F}{df_n F + df_d}}$$
View(data)
View(data)
View(EN_data)
View(EN_data)
item_data <- read.xlsx("Items.xlsx",sheetName="items")
library(readxl)
library(xlsx)
item_data <- read.xlsx("Items.xlsx",sheetName="items")
EN_results_data <- read.xlsx("Results_EN.xlsx",sheetName="Sheet1")
item_results<-merge(item_data,EN_results_data)
EN_data<-merge(item_results, EN_Ss_data)
EN_Ss_data<-read.xlsx('Ss_EN', sheetName='EN_Ss')
EN_Ss_data<-read.xlsx('Ss_EN.xlsx', sheetName='EN_Ss')
EN_data<-merge(item_results, EN_Ss_data)
EN_data<-merge(item_results, EN_Ss_data)
EN_data <- EN_data[,colSums(is.na(EN_data))<nrow(EN_data)]
CN_results_data <- read.xlsx("Results_CN.xlsx",sheetName="Sheet1")
item_resultsCN<-merge(item_data,CN_results_data)
CN_Ss_data<- read.xlsx('Ss_CN.xlsx', sheetName= 'CN_Ss')
CN_data<-merge(item_results, CN_Ss_data)
#CN_data <- CN_data[,colSums(is.na(CN_data))<nrow(CN_data)]
View(CN_data)
View(CN_data)
View(item_resultsCN)
View(item_resultsCN)
View(CN_Ss_data)
View(CN_Ss_data)
View(item_results)
View(item_resultsCN)
CN_Ss_data<- read.xlsx('Ss_CN.xlsx', sheetName= 'CN_Ss')
CN_data<-merge(item_resultsCN, CN_Ss_data)
View(CN_data)
View(CN_data)
#CN_results_data <- read.xlsx("Results_CN.xlsx",sheetName="Sheet1")
#item_resultsCN<-merge(item_data,CN_results_data)
#CN_Ss_data<- read.xlsx('Ss_CN.xlsx', sheetName= 'CN_Ss')
#CN_data<-merge(item_resultsCN, CN_Ss_data)
CN_data <- CN_data[,colSums(is.na(CN_data))<nrow(CN_data)]
View(CN_data)
View(CN_data)
library(xlsx)
item_data <- read.xlsx("Items.xlsx",sheetName="items")
EN_results_data <- read.xlsx("Results_EN.xlsx",sheetName="Sheet1")
item_Ss_results<-read.xlsx('Final_merged.xlsx', sheetName='Sheet1')
library(readxl)
install.packaged('readxl')
install.packages('readxl')
library(readxl)
install.packages("readxl")
clear
item_data <- read.xlsx("Items.xlsx",sheetName="items")
rm(list=ls())
#install.packages('readxl')
library(readxl)
item_Ss_results<-read.xl('Final_merged.xlsx', sheetName='Sheet1')
item_Ss_results<-read.excel('Final_merged.xlsx', sheetName='Sheet1')
item_Ss_results<-readxl_example('Final_merged.xlsx', sheetName='Sheet1')
item_Ss_results<-readxl_example('Final_merged.xlsx')
setwd('/Users/tzhu9/Documents/OneDrive - The University of Western Ontario/Toka Thesis/lme')
item_Ss_results<-readxl_example('Final_merged.xlsx')
item_Ss_results<-readxl_example('Final_merged.xlsx')
item_Ss_results<-read.excel('Final_merged.xlsx')
#install.packages('readxl')
library(tidyverse)
item_Ss_results<-read.excel('Final_merged.xlsx')
readxl::read_excel(path = "/Users/tzhu9/Documents/OneDrive - The University of Western Ontario/Toka Thesis/lme",sheet=1)
item_Ss_results<-readxl('Final_merged.xlsx')
#install.packages('readxl')
library(readxl)
item_Ss_results<-readxl('Final_merged.xlsx')
item_Ss_results<-read_excel('Final_merged.xlsx')
final_merged<-merge(item_Ss_results, item_data)
item_data <- read.xlsx("Items.xlsx",sheetName="items")
item_data <- read_excel("Items.xlsx",sheetName="items")
item_data <- read_excel("Items.xlsx")
item_Ss_results<-read_excel('Final_merged.xlsx')
final_merged<-merge(item_Ss_results, item_data)
write.xlsx(final_merged, "final_merged_data.xlsx")
#install.packages('readxl')
library(readxl)
library(xlsx)
item_data <- read_excel("Items.xlsx")
item_Ss_results<-read_excel('Final_merged.xlsx')
final_merged<-merge(item_Ss_results, item_data)
write.xlsx(final_merged, "final_merged_data.xlsx")
item_data <- read_excel("Items.xlsx")
#install.packages('readxl')
library(readxl)
library(xlsx)
#install.packages('readxl')
library(readxl)
library(xlsx)
Ss_CN<-read_excel('Ss_CN.xlsx')
item_Ss_CN<-merge(item_data,Ss_CN)
item_data <- read_excel("Items.xlsx")
Ss_CN<-read_excel('Ss_CN.xlsx')
item_Ss_CN<-merge(item_data,Ss_CN)
View(item_Ss_CN)
View(item_Ss_CN)
View(CN_data)
View(CN_data)
item_data <- read_excel("Items.xlsx")
Ss_CN<-read_excel('Ss_CN.xlsx')
item_Ss_CN<-merge(item_data,Ss_CN)
results_CN<-read_excel('Results_CN.xlsx')
CN_all<-merge(item_Ss_CN,results_CN)
View(CN_all)
write.xlsx(CN_all, "CN_data.xlsx")
item_data <- read_excel("Items.xlsx")
Ss_CN<-read_excel('Ss_CN.xlsx')
item_Ss_CN<-merge(item_data,Ss_CN)
results_CN<-read_excel('Results_CN.xlsx')
CN_all<-merge(item_Ss_CN,results_CN)
View(CN_all)
View(CN_all)
item_data <- read_excel("Items.xlsx")
Ss_CN<-read_excel('Ss_CN.xlsx')
item_Ss_CN<-merge(item_data,Ss_CN)
results_CN<-read_excel('Results_CN.xlsx')
CN_all<-merge(item_Ss_CN,results_CN)
View(CN_all)
View(CN_all)
write.xlsx(CN_all, "CN_data.xlsx")
EN_all<-read_excel('EN_data.xlsx')
all<-merge(CN_all,EN_all)
View(all)
View(all)
View(CN_all)
View(CN_all)
View(EN_all)
View(EN_all)
EN_all<-read_excel('EN_data.xlsx')
all<-merge(CN_all,EN_all)
View(EN_all)
View(EN_all)
item_data <- read_excel("Items.xlsx")
results_EN<-read_excel('Results_EN.xlsx')
Ss_CN<-read_excel('Ss_CN.xlsx')
Ss_EN<-read_excel('Ss_EN.xlsx')
results_EN_item<-merge(results_EN, item_data)
all_EN<-merge(results_EN_item, Ss_EN)
View(results_EN_item)
View(results_EN_item)
item_data <- read_excel("Items.xlsx")
Ss_CN<-read_excel('Ss_CN.xlsx')
item_Ss_CN<-merge(item_data,Ss_CN)
results_CN<-read_excel('Results_CN.xlsx')
CN_all<-merge(item_Ss_CN,results_CN,by="Ss")
View(CN_all)
View(CN_all)
#item_data <- read_excel("Items.xlsx")
#Ss_CN<-read_excel('Ss_CN.xlsx')
#item_Ss_CN<-merge(item_data,Ss_CN)
#results_CN<-read_excel('Results_CN.xlsx')
CN_all<-merge(item_Ss_CN,results_CN,by=c("Ss","prime","phrase_condition","idiom_lang","end"))
View(CN_all)
View(CN_all)
item_data <- read_excel("Items.xlsx")
results_EN<-read_excel('Results_EN.xlsx')
Ss_EN<-read_excel('Ss_EN.xlsx')
item_Ss_EN<-merge(Ss_EN, item_data)
EN_all<-merge(item_Ss_En,results_EN_item,by=c("Ss","prime","phrase_condition","idiom_lang","end"))
item_data <- read_excel("Items.xlsx")
results_EN<-read_excel('Results_EN.xlsx')
Ss_EN<-read_excel('Ss_EN.xlsx')
item_Ss_EN<-merge(Ss_EN, item_data)
EN_all<-merge(item_Ss_EN,results_EN_item,by=c("Ss","prime","phrase_condition","idiom_lang","end"))
View(EN_all)
View(EN_all)
View(EN_all)
View(EN_all)
item_data <- read_excel("Items.xlsx")
results_EN<-read_excel('Results_EN.xlsx')
Ss_EN<-read_excel('Ss_EN.xlsx')
item_Ss_EN<-merge(Ss_EN, item_data)
EN_all<-merge(item_Ss_EN,results_EN_item,by=c("Ss","prime","phrase_condition","idiom_lang","end"))
View(EN_all)
View(EN_all)
View(EN_all)
View(EN_all)
View(CN_all)
View(CN_all)
item_data <- read_excel("Items.xlsx")
results_EN<-read_excel('Results_EN.xlsx')
Ss_EN<-read_excel('Ss_EN.xlsx')
item_Ss_EN<-merge(Ss_EN, item_data)
EN_all<-merge(item_Ss_EN,results_EN,by=c("Ss","prime","phrase_condition","idiom_lang","end"))
View(EN_data)
View(EN_data)
View(EN_all)
View(EN_all)
write.xlsx(CN_all, "CN_data.xlsx")
EN_all<-read_excel('EN_data.xlsx')
write.xlsx(CN_all, "CN_data.xlsx")
EN_all<-read_excel('EN_data.xlsx')
write.xlsx(CN_all, "CN_all.xlsx")
EN_all<-read_excel('EN_all.xlsx')
write.xlsx(EN_all, "EN_all.xlsx")
item_data <- read_excel("Items.xlsx")
results_EN<-read_excel('Results_EN.xlsx')
Ss_EN<-read_excel('Ss_EN.xlsx')
item_Ss_EN<-merge(Ss_EN, item_data)
EN_all<-merge(item_Ss_EN,results_EN,by=c("Ss","prime","phrase_condition","idiom_lang","end"))
item_data <- read_excel("Items.xlsx")
Ss_CN<-read_excel('Ss_CN.xlsx')
results_CN<-read_excel('Results_CN.xlsx')
item_Ss_CN<-merge(Ss_CN,item_data)
CN_all<-merge(item_Ss_CN,results_CN,by=c("Ss","prime","phrase_condition","idiom_lang","end"))
#install.packages('readxl')
library(readxl)
library(xlsx)
library(lme4)
library(lme4)
library(Languge R)
#library(lme4)
install.packages('Language R')
#library(lme4)
#install.packages('Language R')
library('Language R')
#library(lme4)
#install.packages('Language R')
library(LanguageR)
#library(lme4)
#install.packages('Language R')
library(languageR)
#library(lme4)
#install.packages('Language R')
library(languageR)
#library(lme4)
#install.packages('Language R')
#library(languageR)
library(Car)
#library(lme4)
#install.packages('Language R')
#library(languageR)
library(car)
install.packages('multcomp')
install.packages("multcomp")
#library(lme4)
#install.packages('Language R')
#library(languageR)
#library(car)
#install.packages('multcomp')
library(multcomp)
#library(lme4)
#install.packages('Language R')
library(languageR)
#library(lme4)
install.packages('Language R')
#library(languageR)
#library(car)
#install.packages('multcomp')
#library(multcomp)
#library(lme4)
#install.packages('Language R')
library(languageR)
setwd('/Users/tzhu9/Documents/OneDrive - The University of Western Ontario/Toka Thesis/lme')
#install.packages('readxl')
library(readxl)
library(xlsx)
data<-read_excel('All_Ss_Merged')
data<-read_excel('All_Ss_Merged.xlsx')
View(data)
View(data)
contrasts(data$idiom_lang)=contr.sum(levels(data$idiom_lang))
plot(density(data$exp_rt,na.rm=TRUE))
burt$invt=-1000/burt$exp_rt
data$invt=-1000/data$exp_rt
plot(density(data$invt))
data_trim=data[data$exp_rt<2,]
plot(density(data_trim))
data_trim=data[data$exp_rt<2,]
plot(density(data_trim$exp_rt))
model1=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_lang+(1+phrase_condition*idiom_lang|nat_lang),data=trim_data)
library(lme4)
#library(car)
#install.packages('multcomp')
#library(multcomp)
model1=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_lang+(1+phrase_condition*idiom_lang|nat_lang),data=trim_data)
model1=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_lang+(1+phrase_condition*idiom_lang|nat_lang),trim_data)
model1=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_lang+(1+phrase_condition*idiom_lang|nat_lang),data_trim)
model1=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_lang+(1+phrase_condition*idiom_lang|nat_LANG),data_trim)
model1=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_lang+(1+phrase_condition*idiom_lang|nat_LAN),data_trim)
model1=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_LANG+(1+phrase_condition*idiom_lang|nat_LAN),data_trim)
model1=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_LAN+(1+phrase_condition*idiom_lang|nat_LAN),data_trim)
#model1=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_LAN+(1+phrase_condition*idiom_lang|nat_LAN),data_trim)
model1 <- lmer(exp_rt ~ nat_LAN*phrase_condition*idiom_lang + Error(Ss_LAN/(phrase_condition*idiom_lang)) + nat_LAN, data=data_trim)
#model1=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_LAN+(1+phrase_condition*idiom_lang|nat_LAN),data_trim)
model1 <- aov(exp_rt ~ nat_LAN*phrase_condition*idiom_lang + Error(Ss_LAN/(phrase_condition*idiom_lang)) + nat_LAN, data=data_trim)
#model1=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_LAN+(1+phrase_condition*idiom_lang|nat_LAN),data_trim)
model1 <- aov(exp_rt ~ nat_LAN*phrase_condition*idiom_lang + Error(Ss_LAN/(phrase_condition*idiom_lang)) + nat_LAN, data=data_trim)
model1
#model1=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_LAN+(1+phrase_condition*idiom_lang|nat_LAN),data_trim)
model1 <- aov(exp_rt ~ nat_LAN*phrase_condition*idiom_lang + Error(Ss_LAN/(phrase_condition*idiom_lang)) + nat_LAN, data=data_trim)
summary(model1)
model2=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_LAN+(1+phrase_condition*idiom_lang|Ss_LAN)+(1|end),data_trim)
#model1 <- aov(exp_rt ~ nat_LAN*phrase_condition*idiom_lang + Error(Ss_LAN/(phrase_condition*idiom_lang)) + nat_LAN, data=data_trim)
summary(model1)
model2=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_LAN+(1+phrase_condition*idiom_lang|Ss_LAN)+(1|end),data_trim)
#model1 <- aov(exp_rt ~ nat_LAN*phrase_condition*idiom_lang + Error(Ss_LAN/(phrase_condition*idiom_lang)) + nat_LAN, data=data_trim)
summary(model2)
#model2=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_LAN+
#random effects for Ss
(1+phrase_condition*idiom_lang|Ss_LAN)+
#random effects for items
(1|end),data_trim)
model2=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_LAN+
#random effects for Ss
(1+phrase_condition*idiom_lang|Ss_LAN)+
#random effects for items
(1|end),data_trim)
#model1 <- aov(exp_rt ~ nat_LAN*phrase_condition*idiom_lang + Error(Ss_LAN/(phrase_condition*idiom_lang)) + nat_LAN, data=data_trim)
Anova(model2)
library(lme4)
library(car)
#install.packages('multcomp')
#library(multcomp)
model2=lmer(exp_rt~1+phrase_condition*idiom_lang*nat_LAN+
#random effects for Ss
(1+phrase_condition*idiom_lang|Ss_LAN)+
#random effects for items
(1|end),data_trim)
#model1 <- aov(exp_rt ~ nat_LAN*phrase_condition*idiom_lang + Error(Ss_LAN/(phrase_condition*idiom_lang)) + nat_LAN, data=data_trim)
Anova(model2)
setwd('/Users/tzhu9/Documents/OneDrive - The University of Western Ontario/R copy/Blogdown')
#install.packages('blogdown')
library(blogdown)
#blogdown::new_site
#blogdown::install_hugo()
setwd('/Users/tzhu9/Documents/OneDrive - The University of Western Ontario/R copy/Blogdown/tokaalmighty91.github.io/')
new_site()
devtools::install_github("rstudio/blogdown")
library(blogdown)
install_hugo()
install_hugo()
new_site()
setwd('/Users/tzhu9/Documents/OneDrive - The University of Western Ontario/Blogdown/tokaalmighty91.github.io')
install_hugo()
new_site()
install_theme("kishaningithub/hugo-creative-portfolio-theme", theme_example = TRUE, update_config = TRUE)
#devtools::install_github("rstudio/blogdown")
library(blogdown)
setwd('/Users/tzhu9/Documents/OneDrive - The University of Western Ontario/Blogdown/tokaalmighty91.github.io')
#install_hugo()
new_site()
install_theme("kishaningithub/hugo-creative-portfolio-theme", theme_example = TRUE, update_config = TRUE)
serve_site()
serve_site()
